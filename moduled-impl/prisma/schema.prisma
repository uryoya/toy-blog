datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

generator client {
    provider = "prisma-client-js"
}

generator drizzle {
    provider = "drizzle-prisma-generator"
    output   = "../src/drizzle"
}

model User {
    id        String   @id @db.Uuid
    email     String   @unique
    createdAt DateTime

    profile   UserProfile?
    articles  Article[]
    bookmarks Bookmark[]
    following Follow[]
    follower  Follow[]     @relation("followee")
}

model UserProfile {
    user     User   @relation(fields: [userId], references: [id])
    userId   String @id @db.Uuid
    username String
    bio      String
    avatar   String
    website  String
}

model Article {
    id       String @id @db.Uuid
    title    String
    content  String
    author   User   @relation(fields: [authorId], references: [id])
    authorId String @db.Uuid

    bookmarks Bookmark[]
    createdAt ArticleCreated?
    updates   ArticleUpdated[]
}

model ArticleCreated {
    article   Article  @relation(fields: [articleId], references: [id])
    articleId String   @id @db.Uuid
    createdAt DateTime
}

model ArticleUpdated {
    article   Article  @relation(fields: [articleId], references: [id])
    articleId String   @db.Uuid
    updatedAt DateTime

    @@unique([articleId, updatedAt])
}

model Bookmark {
    user      User     @relation(fields: [userId], references: [id])
    userId    String   @db.Uuid
    article   Article  @relation(fields: [articleId], references: [id])
    articleId String   @db.Uuid
    createdAt DateTime

    @@id([articleId, userId])
}

model Follow {
    user       User     @relation(fields: [userId], references: [id])
    userId     String   @db.Uuid
    followee   User     @relation("followee", fields: [followeeId], references: [id])
    followeeId String   @db.Uuid
    createdAt  DateTime

    @@id([userId, followeeId])
}
